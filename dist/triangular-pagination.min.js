!function(a,b){"use strict";var c=a.extend,d=a.isArray,e=a.isFunction,f=a.isNumber,g=a.isObject,h=function(a,b){return g(a)?a:b},i=function(a,b){return f(a)?a:b},j=function(a,b){return d(a)?a:b},k={fullList:null,currentList:[],pageLength:null,totalCount:null,pageCount:null,navWrap:2,currentPage:0,navList:[],_hook:a.noop,_updateMode:"updateAsync"},l=function(){return function(a){a.navList.splice(0);var b=a.navWrap,c=2*b+1,d=c+6,e=b+1,f=a.pageCount-e,g=0,h=a.pageCount,i=a.pageCount-1-c;if(d>h){do a.navList.push({index:g,selected:g===a.currentPage});while(++g<h)}else{a.navList.push({index:0,selected:0===a.currentPage}),a.currentPage>e?(g=a.currentPage-b,g>i&&(g=i),a.navList.push({splitter:!0,index:g-1})):g=1,a.currentPage<f?(h=a.currentPage+b,c>h&&(h=c)):h-=2;do a.navList.push({index:g,selected:g===a.currentPage});while(g++<h);a.currentPage<f&&a.navList.push({splitter:!0,index:h+1}),a.navList.push({index:a.pageCount-1,selected:a.currentPage===a.pageCount-1})}return a.navList}},m=function(a,b,g){var l=function(a,b,c){return this.reset().init(a,b,c)};return c(l.prototype,{_getPageCount:function(a,b){var c=a%b;return(a-c)/b+(c>0?1:0)},reset:function(){return c(this,k,{reloading:!1,reloadingPromise:null})},init:function(a,e,g){var h=null;d(a)&&(h=a,a=h.length,this._updateMode="updateSync",this.currentList=h.slice(0,e)),f(a)||b.error(new TypeError("totalCount should be a Number but got "+typeof a)),f(e)||b.error(new TypeError("pageLength should be a Number but got "+typeof e)),c(this,{fullList:h,totalCount:a,pageLength:e,pageCount:this._getPageCount(a,e)}).setHook(g,!0).updateNavList()},setHook:function(a,d){return e(a)?c(this,{_hook:a}):(d||b.error(new TypeError("Got "+typeof a+" but expected Function.")),this)},updateAsync:function(b){var d=a.when(this._hook(b,this.pageLength,this));return this.reloading=!0,d["finally"](function(){this.reloading=!1}.bind(this)),c(this,{reloadingPromise:d.then(this.updatePreCounted.bind(this,b),a.reject)})},updateSync:function(a){return this.updatePreCounted(a,{currentList:this.fullList.slice(a*this.pageLength,(a+1)*this.pageLength)})},updatePreCounted:function(a,b){var d;return b=h(b,{}),a=i(a,this.currentPage),d=i(b.pageLength,this.pageLength),f(b.totalCount)&&b.totalCount!==this.totalCount&&c(this,{totalCount:b.totalCount,pageCount:this._getPageCount(d)}),c(this,{currentPage:i(b.currentPage,a),currentList:j(b.currentList,this.currentList),pageLength:d}).updateNavList()},update:function(a){return this[this._updateMode](a)},updateNavList:function(){return c(this,{navList:g(this)})},hasNext:function(){return this.currentPage<this.pageCount-1},hasPrev:function(){return this.currentPage>0},isFirst:function(){return!this.hasPrev()},isLast:function(){return!this.hasNext()},next:function(){return this.hasNext()?this[this._updateMode](this.currentPage+1):this},prev:function(){return this.hasPrev()?this[this._updateMode](this.currentPage-1):this},first:function(){return this.isFirst()?this:this[this._updateMode](0)},last:function(){return this.isLast()?this:this[this._updateMode](this.pageCount-1)}}),function(a,b,c){return new l(a,b,c)}};b.factory("triNgPaginationNavList",["$log",l]).provider("triNgPagination",[function(){return{setConfig:function(a){return c(k,a)},$get:["$q","$log","triNgPaginationNavList",m]}}])}(angular,angular.module("triNgPagination",["ng"]));
//# sourceMappingURL=triangular-pagination.min.js.map